mypathlib
=========

icontract does not prevent endless loops at the moment. This is a missing feature in icontract, and needs yet
to be discussed, designed and implemented. This is not a blocker, we just haven't implemented it yet.

sphinx-icontract only recognizes an implication if ``not A or B``. Hence, I always put a "not" even though it might be
unnecessary (``not (not A) or B`` will render to ``not A => B``). This is a limitation of sphinx-icontract and will be
fixed in the near future.

I noted with ``???`` whenever I was not sure about something.

Some stats:

* It took me about 3 hours and 15 minutes to annotate the file.
*

.. autoclass:: mypathlib.PurePath
    :members:
    :special-members:

.. autoclass:: mypathlib.Path
    :members:
    :special-members:
